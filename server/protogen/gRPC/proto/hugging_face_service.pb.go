// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.19.6
// source: gRPC/proto/hugging_face_service.proto

package service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TextGenerationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model  string `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	Inputs string `protobuf:"bytes,2,opt,name=inputs,proto3" json:"inputs,omitempty"`
}

func (x *TextGenerationReq) Reset() {
	*x = TextGenerationReq{}
	mi := &file_gRPC_proto_hugging_face_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextGenerationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextGenerationReq) ProtoMessage() {}

func (x *TextGenerationReq) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_proto_hugging_face_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextGenerationReq.ProtoReflect.Descriptor instead.
func (*TextGenerationReq) Descriptor() ([]byte, []int) {
	return file_gRPC_proto_hugging_face_service_proto_rawDescGZIP(), []int{0}
}

func (x *TextGenerationReq) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *TextGenerationReq) GetInputs() string {
	if x != nil {
		return x.Inputs
	}
	return ""
}

type TextGenerationRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeneratedText string `protobuf:"bytes,1,opt,name=generated_text,json=generatedText,proto3" json:"generated_text,omitempty"`
}

func (x *TextGenerationRes) Reset() {
	*x = TextGenerationRes{}
	mi := &file_gRPC_proto_hugging_face_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextGenerationRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextGenerationRes) ProtoMessage() {}

func (x *TextGenerationRes) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_proto_hugging_face_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextGenerationRes.ProtoReflect.Descriptor instead.
func (*TextGenerationRes) Descriptor() ([]byte, []int) {
	return file_gRPC_proto_hugging_face_service_proto_rawDescGZIP(), []int{1}
}

func (x *TextGenerationRes) GetGeneratedText() string {
	if x != nil {
		return x.GeneratedText
	}
	return ""
}

type HFWebHookInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id of the action that will be sent while creating the webhook
	ActionId int32 `protobuf:"varint,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	// Type of repo (model, dataset, etc)
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// Name of the repository
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *HFWebHookInfo) Reset() {
	*x = HFWebHookInfo{}
	mi := &file_gRPC_proto_hugging_face_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HFWebHookInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HFWebHookInfo) ProtoMessage() {}

func (x *HFWebHookInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_proto_hugging_face_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HFWebHookInfo.ProtoReflect.Descriptor instead.
func (*HFWebHookInfo) Descriptor() ([]byte, []int) {
	return file_gRPC_proto_hugging_face_service_proto_rawDescGZIP(), []int{2}
}

func (x *HFWebHookInfo) GetActionId() int32 {
	if x != nil {
		return x.ActionId
	}
	return 0
}

func (x *HFWebHookInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *HFWebHookInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type WebHookTriggerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionId uint32 `protobuf:"varint,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	Payload  []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *WebHookTriggerReq) Reset() {
	*x = WebHookTriggerReq{}
	mi := &file_gRPC_proto_hugging_face_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebHookTriggerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebHookTriggerReq) ProtoMessage() {}

func (x *WebHookTriggerReq) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_proto_hugging_face_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebHookTriggerReq.ProtoReflect.Descriptor instead.
func (*WebHookTriggerReq) Descriptor() ([]byte, []int) {
	return file_gRPC_proto_hugging_face_service_proto_rawDescGZIP(), []int{3}
}

func (x *WebHookTriggerReq) GetActionId() uint32 {
	if x != nil {
		return x.ActionId
	}
	return 0
}

func (x *WebHookTriggerReq) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type CreateHFRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of repo (model, dataset, etc)
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Name of the new Repository
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// To which organisation this repo is for
	Organisation string `protobuf:"bytes,3,opt,name=organisation,proto3" json:"organisation,omitempty"`
	// Whether this repo is private or not
	Private string `protobuf:"bytes,4,opt,name=private,proto3" json:"private,omitempty"`
}

func (x *CreateHFRepoReq) Reset() {
	*x = CreateHFRepoReq{}
	mi := &file_gRPC_proto_hugging_face_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateHFRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHFRepoReq) ProtoMessage() {}

func (x *CreateHFRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_proto_hugging_face_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHFRepoReq.ProtoReflect.Descriptor instead.
func (*CreateHFRepoReq) Descriptor() ([]byte, []int) {
	return file_gRPC_proto_hugging_face_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateHFRepoReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateHFRepoReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateHFRepoReq) GetOrganisation() string {
	if x != nil {
		return x.Organisation
	}
	return ""
}

func (x *CreateHFRepoReq) GetPrivate() string {
	if x != nil {
		return x.Private
	}
	return ""
}

type DeleteHFRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of repo (model, dataset, etc)
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Name of the new Repository
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// To which organisation this repo is for
	Organisation string `protobuf:"bytes,3,opt,name=organisation,proto3" json:"organisation,omitempty"`
}

func (x *DeleteHFRepoReq) Reset() {
	*x = DeleteHFRepoReq{}
	mi := &file_gRPC_proto_hugging_face_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteHFRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHFRepoReq) ProtoMessage() {}

func (x *DeleteHFRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_proto_hugging_face_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHFRepoReq.ProtoReflect.Descriptor instead.
func (*DeleteHFRepoReq) Descriptor() ([]byte, []int) {
	return file_gRPC_proto_hugging_face_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteHFRepoReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DeleteHFRepoReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteHFRepoReq) GetOrganisation() string {
	if x != nil {
		return x.Organisation
	}
	return ""
}

type ChangeHFRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of repo (model, dataset, etc)
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Identifier of the repo: The name of the namespace and the name of repo
	// Example: username/name
	RepoId string `protobuf:"bytes,2,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
	// Whether this repo is private or not
	Private string `protobuf:"bytes,3,opt,name=private,proto3" json:"private,omitempty"`
}

func (x *ChangeHFRepoReq) Reset() {
	*x = ChangeHFRepoReq{}
	mi := &file_gRPC_proto_hugging_face_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeHFRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeHFRepoReq) ProtoMessage() {}

func (x *ChangeHFRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_proto_hugging_face_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeHFRepoReq.ProtoReflect.Descriptor instead.
func (*ChangeHFRepoReq) Descriptor() ([]byte, []int) {
	return file_gRPC_proto_hugging_face_service_proto_rawDescGZIP(), []int{6}
}

func (x *ChangeHFRepoReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ChangeHFRepoReq) GetRepoId() string {
	if x != nil {
		return x.RepoId
	}
	return ""
}

func (x *ChangeHFRepoReq) GetPrivate() string {
	if x != nil {
		return x.Private
	}
	return ""
}

type MoveHFRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Origin repo
	FromRepo string `protobuf:"bytes,1,opt,name=from_repo,json=fromRepo,proto3" json:"from_repo,omitempty"`
	// Destination repo
	ToRepo string `protobuf:"bytes,2,opt,name=to_repo,json=toRepo,proto3" json:"to_repo,omitempty"`
	// Type of repo (model, dataset, etc)
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *MoveHFRepoReq) Reset() {
	*x = MoveHFRepoReq{}
	mi := &file_gRPC_proto_hugging_face_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveHFRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveHFRepoReq) ProtoMessage() {}

func (x *MoveHFRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_proto_hugging_face_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveHFRepoReq.ProtoReflect.Descriptor instead.
func (*MoveHFRepoReq) Descriptor() ([]byte, []int) {
	return file_gRPC_proto_hugging_face_service_proto_rawDescGZIP(), []int{7}
}

func (x *MoveHFRepoReq) GetFromRepo() string {
	if x != nil {
		return x.FromRepo
	}
	return ""
}

func (x *MoveHFRepoReq) GetToRepo() string {
	if x != nil {
		return x.ToRepo
	}
	return ""
}

func (x *MoveHFRepoReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

var File_gRPC_proto_hugging_face_service_proto protoreflect.FileDescriptor

var file_gRPC_proto_hugging_face_service_proto_rawDesc = []byte{
	0x0a, 0x25, 0x67, 0x52, 0x50, 0x43, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x75, 0x67,
	0x67, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x68, 0x75, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x66, 0x61, 0x63, 0x65, 0x22, 0x41, 0x0a, 0x11, 0x54, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x22, 0x3a, 0x0a, 0x11, 0x54, 0x65, 0x78, 0x74, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x65, 0x78, 0x74, 0x22, 0x54, 0x0a, 0x0d, 0x48, 0x46, 0x57, 0x65, 0x62, 0x48, 0x6f, 0x6f, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x11, 0x57, 0x65, 0x62,
	0x48, 0x6f, 0x6f, 0x6b, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x77, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48,
	0x46, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22, 0x5d,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x46, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x58, 0x0a,
	0x0f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x46, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22, 0x59, 0x0a, 0x0d, 0x4d, 0x6f, 0x76, 0x65, 0x48,
	0x46, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f,
	0x6d, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x32, 0xff, 0x05, 0x0a, 0x12, 0x48, 0x75, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x46, 0x61,
	0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x14, 0x4c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1e, 0x2e, 0x68, 0x75, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x66, 0x61, 0x63, 0x65, 0x2e,
	0x54, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x1e, 0x2e, 0x68, 0x75, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x66, 0x61, 0x63, 0x65, 0x2e,
	0x54, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x2e, 0x68, 0x75, 0x67, 0x67, 0x69, 0x6e,
	0x67, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x46, 0x52, 0x65,
	0x70, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x68, 0x75, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x66,
	0x61, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x46, 0x52, 0x65, 0x70, 0x6f,
	0x52, 0x65, 0x71, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x2e, 0x68, 0x75, 0x67, 0x67,
	0x69, 0x6e, 0x67, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x46,
	0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x68, 0x75, 0x67, 0x67, 0x69, 0x6e,
	0x67, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x46, 0x52, 0x65,
	0x70, 0x6f, 0x52, 0x65, 0x71, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x1c, 0x2e, 0x68, 0x75, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x48, 0x46, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e,
	0x68, 0x75, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x48, 0x46, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x22, 0x00, 0x12, 0x44, 0x0a,
	0x08, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x1a, 0x2e, 0x68, 0x75, 0x67, 0x67,
	0x69, 0x6e, 0x67, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x48, 0x46, 0x52, 0x65,
	0x70, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x68, 0x75, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x66,
	0x61, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x48, 0x46, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65,
	0x71, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x1a,
	0x2e, 0x68, 0x75, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x48, 0x46, 0x57,
	0x65, 0x62, 0x48, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1a, 0x2e, 0x68, 0x75, 0x67,
	0x67, 0x69, 0x6e, 0x67, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x48, 0x46, 0x57, 0x65, 0x62, 0x48, 0x6f,
	0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x52, 0x57, 0x65, 0x62, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x1a,
	0x2e, 0x68, 0x75, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x48, 0x46, 0x57,
	0x65, 0x62, 0x48, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1a, 0x2e, 0x68, 0x75, 0x67,
	0x67, 0x69, 0x6e, 0x67, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x48, 0x46, 0x57, 0x65, 0x62, 0x48, 0x6f,
	0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4e, 0x65, 0x77, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x57,
	0x65, 0x62, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x1a, 0x2e, 0x68, 0x75, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x66, 0x61, 0x63, 0x65, 0x2e, 0x48, 0x46, 0x57, 0x65, 0x62, 0x48, 0x6f, 0x6f, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x1a, 0x2e, 0x68, 0x75, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x48, 0x46, 0x57, 0x65, 0x62, 0x48, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00,
	0x12, 0x52, 0x0a, 0x0e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x57, 0x65, 0x62, 0x48, 0x6f,
	0x6f, 0x6b, 0x12, 0x1e, 0x2e, 0x68, 0x75, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x57, 0x65, 0x62, 0x48, 0x6f, 0x6f, 0x6b, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x68, 0x75, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x57, 0x65, 0x62, 0x48, 0x6f, 0x6f, 0x6b, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x22, 0x00, 0x42, 0x21, 0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x65, 0x61, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x67, 0x6f, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gRPC_proto_hugging_face_service_proto_rawDescOnce sync.Once
	file_gRPC_proto_hugging_face_service_proto_rawDescData = file_gRPC_proto_hugging_face_service_proto_rawDesc
)

func file_gRPC_proto_hugging_face_service_proto_rawDescGZIP() []byte {
	file_gRPC_proto_hugging_face_service_proto_rawDescOnce.Do(func() {
		file_gRPC_proto_hugging_face_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_gRPC_proto_hugging_face_service_proto_rawDescData)
	})
	return file_gRPC_proto_hugging_face_service_proto_rawDescData
}

var file_gRPC_proto_hugging_face_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_gRPC_proto_hugging_face_service_proto_goTypes = []any{
	(*TextGenerationReq)(nil), // 0: huggingface.TextGenerationReq
	(*TextGenerationRes)(nil), // 1: huggingface.TextGenerationRes
	(*HFWebHookInfo)(nil),     // 2: huggingface.HFWebHookInfo
	(*WebHookTriggerReq)(nil), // 3: huggingface.WebHookTriggerReq
	(*CreateHFRepoReq)(nil),   // 4: huggingface.CreateHFRepoReq
	(*DeleteHFRepoReq)(nil),   // 5: huggingface.DeleteHFRepoReq
	(*ChangeHFRepoReq)(nil),   // 6: huggingface.ChangeHFRepoReq
	(*MoveHFRepoReq)(nil),     // 7: huggingface.MoveHFRepoReq
}
var file_gRPC_proto_hugging_face_service_proto_depIdxs = []int32{
	0, // 0: huggingface.HuggingFaceService.LaunchTextGeneration:input_type -> huggingface.TextGenerationReq
	4, // 1: huggingface.HuggingFaceService.CreateRepository:input_type -> huggingface.CreateHFRepoReq
	5, // 2: huggingface.HuggingFaceService.DeleteRepository:input_type -> huggingface.DeleteHFRepoReq
	6, // 3: huggingface.HuggingFaceService.ChangeRepoVisibility:input_type -> huggingface.ChangeHFRepoReq
	7, // 4: huggingface.HuggingFaceService.MoveRepo:input_type -> huggingface.MoveHFRepoReq
	2, // 5: huggingface.HuggingFaceService.CreateRepoUpdateWebHook:input_type -> huggingface.HFWebHookInfo
	2, // 6: huggingface.HuggingFaceService.CreateNewPRWebHook:input_type -> huggingface.HFWebHookInfo
	2, // 7: huggingface.HuggingFaceService.CreateNewDiscussionWebHook:input_type -> huggingface.HFWebHookInfo
	3, // 8: huggingface.HuggingFaceService.TriggerWebHook:input_type -> huggingface.WebHookTriggerReq
	1, // 9: huggingface.HuggingFaceService.LaunchTextGeneration:output_type -> huggingface.TextGenerationRes
	4, // 10: huggingface.HuggingFaceService.CreateRepository:output_type -> huggingface.CreateHFRepoReq
	5, // 11: huggingface.HuggingFaceService.DeleteRepository:output_type -> huggingface.DeleteHFRepoReq
	6, // 12: huggingface.HuggingFaceService.ChangeRepoVisibility:output_type -> huggingface.ChangeHFRepoReq
	7, // 13: huggingface.HuggingFaceService.MoveRepo:output_type -> huggingface.MoveHFRepoReq
	2, // 14: huggingface.HuggingFaceService.CreateRepoUpdateWebHook:output_type -> huggingface.HFWebHookInfo
	2, // 15: huggingface.HuggingFaceService.CreateNewPRWebHook:output_type -> huggingface.HFWebHookInfo
	2, // 16: huggingface.HuggingFaceService.CreateNewDiscussionWebHook:output_type -> huggingface.HFWebHookInfo
	3, // 17: huggingface.HuggingFaceService.TriggerWebHook:output_type -> huggingface.WebHookTriggerReq
	9, // [9:18] is the sub-list for method output_type
	0, // [0:9] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gRPC_proto_hugging_face_service_proto_init() }
func file_gRPC_proto_hugging_face_service_proto_init() {
	if File_gRPC_proto_hugging_face_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gRPC_proto_hugging_face_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gRPC_proto_hugging_face_service_proto_goTypes,
		DependencyIndexes: file_gRPC_proto_hugging_face_service_proto_depIdxs,
		MessageInfos:      file_gRPC_proto_hugging_face_service_proto_msgTypes,
	}.Build()
	File_gRPC_proto_hugging_face_service_proto = out.File
	file_gRPC_proto_hugging_face_service_proto_rawDesc = nil
	file_gRPC_proto_hugging_face_service_proto_goTypes = nil
	file_gRPC_proto_hugging_face_service_proto_depIdxs = nil
}
