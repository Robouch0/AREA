syntax = "proto3";

package weather;

option go_package = "github.com/area/grpc-go/service";

service WeatherService {
  // Each hour, when temperature exceed a certain amount, do this
  rpc NewTemperatureTrigger(TempTriggerReq) returns(TempTriggerReq) {}

  // Each Hour, when it is night, do this
  rpc NewIsDayTrigger(IsDayTriggerReq) returns(IsDayTriggerReq) {}

  // Deactivate weather trigger
  rpc DeactivateWeatherAction(DeactivateWeather)
    returns (DeactivateWeather) {}
}

message TempTriggerReq {
  bool activated = 1;
  int32 action_id = 2;

  float temperature = 3; /* With a degree of precision of 0.5 */
  string timezone = 4; /* Timezone of the trigger */
  string region = 5; /* Will be converted to latitude and longitude */
}

message IsDayTriggerReq {
  bool activated = 1;
  int32 action_id = 2;

  string timezone = 3; /* Timezone of the trigger */
  string region = 4; /* Will be converted to latitude and longitude */
}

message DeactivateWeather {
  uint32 action_id = 1;
}
