syntax = "proto3";

package crypto;

option go_package = "github.com/area/grpc-go/service";

service CryptoService {
    // Each hour, when crypto currency value exceed a certain amount, do this
    rpc IsHigherThanTrigger(IsHigherThanTriggerReq) returns(IsHigherThanTriggerReq) {}

    // Each hour, when crypto currency value is lower than a certain amount, do this
    rpc IsLowerThanTrigger(IsLowerThanTriggerReq) returns(IsLowerThanTriggerReq) {}

    // Set activate crypto trigger
    rpc SetActivate(SetActivateCrypto) returns (SetActivateCrypto) {}

    // Delete a crypto trigger
    rpc DeleteAction(DeleteCryptoActionReq) returns (DeleteCryptoActionReq) {}
}

message IsHigherThanTriggerReq {
    bool activated = 1;
    int32 action_id = 2;

    float threshold = 4; /* value of the currency to be higher of */
    string crypto_currency = 5; /* crypto currency to convert */
    string currency = 6; /* currency to check */
}

///////////////

message IsLowerThanTriggerReq {
    bool activated = 1;
    int32 action_id = 2;

    float threshold = 4; /* value of the currency to be higher of */
    string crypto_currency = 5; /* crypto currency to convert */
    string currency = 6; /* currency to check */
}

///////////////

message SetActivateCrypto {
    uint32 action_id = 1;
    bool activated = 2;
}

///////////////

message DeleteCryptoActionReq {
    uint32 action_id = 1;
}
