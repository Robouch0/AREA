syntax = "proto3";

package github;

option go_package = "github.com/area/grpc-go/service";

service GithubService {
  // Update repository infos
  rpc UpdateRepository(UpdateRepoInfos) returns(UpdateRepoInfos) {}

  // Update file in repository
  rpc UpdateFile(UpdateRepoFile) returns(UpdateRepoFile) {}

  // Delete file in repository
  rpc DeleteFile(DeleteRepoFile) returns(DeleteRepoFile) {}

  /* Webhooks */

  // Create a push to repository webhook
  rpc CreatePushWebhook(GitWebHookInfo) returns(GitWebHookInfo) {}

  // Create a delete branch repository webhook
  rpc CreateDeleteBranchWebhook(GitWebHookInfo) returns(GitWebHookInfo) {}

  // Create a fork repository webhook
  rpc CreateForkRepositoryWebhook(GitWebHookInfo) returns(GitWebHookInfo) {}

  // Create a new branch repository webhook
  rpc CreateNewBranchWebhook(GitWebHookInfo) returns(GitWebHookInfo) {}

  // Create a new issue repository webhook
  rpc CreateNewIssueWebhook(GitWebHookInfo) returns(GitWebHookInfo) {}

  // Create a delete issue repository webhook
  rpc CreateDeleteIssueWebhook(GitWebHookInfo) returns(GitWebHookInfo) {}

  // Create a new pull request repository webhook
  rpc CreateNewPRWebhook(GitWebHookInfo) returns(GitWebHookInfo) {}

  // Create a delete pull request repository webhook
  rpc CreateDeletePRWebhook(GitWebHookInfo) returns(GitWebHookInfo) {}

  // Trigger of github webhook
  rpc TriggerWebHook (GithubWebHookTriggerReq) returns (GithubWebHookTriggerReq) {}

  // Deactivate a webhook github
  rpc SetActivateAction(SetActivateGithub) returns (SetActivateGithub) {}

  // Delete a github trigger
  rpc DeleteAction(DeleteGithubActionReq) returns (DeleteGithubActionReq) {}
}

///////

message GitWebHookInfo {
  // Id of the action that will be sent while creating the webhook
  int32 action_id = 1;

  // Name of the owner of the repository
  string owner = 2;

  // Name of the repository
  string repo = 3;
}

///////

message UpdateRepoInfos {
  string owner = 1; /* Path parameter */
  string repo = 2; /* Path parameter */

  string name = 4;
  string description = 5;
  // There is more to add if needed
}

///////

message UpdateRepoFile {
  string owner = 1; /* Path parameter */
  string repo = 2; /* Path parameter */
  string path = 3; /* Path parameter */

  string message = 4;
  string content = 5; // Base64
  string sha = 6;
  // There is more to add if needed
}

///////

message DeleteRepoFile {
  string owner = 1;
  string repo = 2;
  string path = 3;

  string message = 4;
  string sha = 5;
  // There is more to add if needed
}

///////

message GithubWebHookTriggerReq {
  uint32 action_id = 1;
  bytes payload = 2;
  bytes header = 3;
}

///////

message SetActivateGithub {
  uint32 action_id = 1;
  bool activated = 2;
}

///////////////

message DeleteGithubActionReq {
  uint32 action_id = 1;
}
