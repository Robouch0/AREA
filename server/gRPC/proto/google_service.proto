syntax = "proto3";

package google;

option go_package = "github.com/area/grpc-go/service";

service GoogleService {
  // Send an email with the current user email
  rpc SendEmailMe (EmailRequestMe) returns (EmailRequestMe) {}

  // Delete one of user's email based on the subject of the mail
  rpc DeleteEmailMe (DeleteEmailRequestMe) returns (DeleteEmailRequestMe) {}

  // Move to trash an email
  rpc MoveToTrash (TrashEmailRequestMe) returns (TrashEmailRequestMe) {}

  // Move out of trash an email
  rpc MoveFromTrash (TrashEmailRequestMe) returns (TrashEmailRequestMe) {}

  /* WebHooks Microservice */

  // Watch email of the user currently logged
  rpc WatchGmailEmail (EmailTriggerReq) returns (EmailTriggerReq) {}

  // Function that handle the payload sent by google gmail
  rpc WatchMeTrigger (GmailTriggerReq) returns (GmailTriggerReq) {}
}

message EmailRequestMe {
  string to = 1;
  // string from = 2; // Will be the user email registered
  string subject = 2;

  string body_message = 3;
}

message DeleteEmailRequestMe {
  string subject = 1;
}

message TrashEmailRequestMe {
  string subject = 1;
}

message EmailTriggerReq {
  uint32 action_id = 1;
}

message GmailTriggerReq {
  uint32 action_id = 1;
  bytes payload = 2;
}
